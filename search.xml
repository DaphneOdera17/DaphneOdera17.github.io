<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>hexo魔改 | 修改首页卡片样式</title>
      <link href="/post/639f0c9.html"/>
      <url>/post/639f0c9.html</url>
      
        <content type="html"><![CDATA[<h1 id="hexo魔改-修改首页卡片样式"><a href="#hexo魔改-修改首页卡片样式" class="headerlink" title="hexo魔改 | 修改首页卡片样式"></a>hexo魔改 | 修改首页卡片样式</h1><h2 id="文章卡片效果预览"><a href="#文章卡片效果预览" class="headerlink" title="文章卡片效果预览"></a>文章卡片效果预览</h2><p><img src="https://typora-birdy.oss-cn-guangzhou.aliyuncs.com/20240412214100.png" style="zoom: 50%"></p><h2 id="新建样式"><a href="#新建样式" class="headerlink" title="新建样式"></a>新建样式</h2><p>在主题文件夹下 source/css/ 中新建 color.css<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.recent-post-item</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">3px</span> <span class="number">#50ccd5</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="selector-class">.card-widget</span><span class="selector-class">.card-info</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">3px</span> <span class="number">#50ccd5</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.card-widget</span><span class="selector-class">.card-announcement</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">3px</span> <span class="number">#50ccd5</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.card-widget</span><span class="selector-class">.card-recent-post</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">3px</span> <span class="number">#50ccd5</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.card-widget</span><span class="selector-class">.card-categories</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">3px</span> <span class="number">#50ccd5</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.card-widget</span><span class="selector-class">.card-tags</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">3px</span> <span class="number">#50ccd5</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.card-widget</span><span class="selector-class">.card-archives</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">3px</span> <span class="number">#50ccd5</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.card-widget</span><span class="selector-class">.card-webinfo</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">3px</span> <span class="number">#50ccd5</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="引入"><a href="#引入" class="headerlink" title="引入"></a>引入</h2><p>在主题配置文件中 inject 的 head 下引入 css<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">    <span class="attr">head:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;/css/color.css&quot;&gt;</span></span><br><span class="line">    <span class="attr">bottom:</span></span><br></pre></td></tr></table></figure></p><h2 id="侧边栏效果预览"><a href="#侧边栏效果预览" class="headerlink" title="侧边栏效果预览"></a>侧边栏效果预览</h2><p><img src="https://typora-birdy.oss-cn-guangzhou.aliyuncs.com/20240412220233.png" style="zoom:50%"><br>以下的代码笔者均添加到 color.css 中了。</p><h3 id="让图片呈现圆角状"><a href="#让图片呈现圆角状" class="headerlink" title="让图片呈现圆角状"></a>让图片呈现圆角状</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="添加悬浮效果"><a href="#添加悬浮效果" class="headerlink" title="添加悬浮效果"></a>添加悬浮效果</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.aside-list-item</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#50ccd5</span>; <span class="comment">/* 背景 */</span></span><br><span class="line">    <span class="attribute">color</span>: white; <span class="comment">/* 白色字体 */</span></span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">8px</span>; <span class="comment">/* 四个角为圆角 */</span></span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1.05</span>); <span class="comment">/* 略微放大 */</span></span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="selector-class">.aside-list-item</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">a</span><span class="selector-class">.title</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: white <span class="meta">!important</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.aside-list-item</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">time</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: white <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="添加过渡"><a href="#添加过渡" class="headerlink" title="添加过渡"></a>添加过渡</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#aside-content</span> <span class="selector-class">.aside-list</span> &gt; <span class="selector-class">.aside-list-item</span> &#123;</span><br><span class="line">    <span class="attribute">transition</span>: background-color <span class="number">0.3s</span> ease, color <span class="number">0.3s</span> ease,</span><br><span class="line">        border-radius <span class="number">0.3s</span> ease, transform <span class="number">0.2s</span> ease, padding-left <span class="number">0.3s</span> ease,</span><br><span class="line">        margin-left <span class="number">0.3s</span> ease; <span class="comment">/* 添加过渡效果 */</span></span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">5px</span> <span class="number">5px</span> <span class="meta">!important</span>; <span class="comment">/* 让框框变大点 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="最终-css-代码"><a href="#最终-css-代码" class="headerlink" title="最终 css 代码"></a>最终 css 代码</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.recent-post-item</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">3px</span> <span class="number">#50ccd5</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.card-widget</span><span class="selector-class">.card-info</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">3px</span> <span class="number">#50ccd5</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.card-widget</span><span class="selector-class">.card-announcement</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">3px</span> <span class="number">#50ccd5</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.card-widget</span><span class="selector-class">.card-recent-post</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">3px</span> <span class="number">#50ccd5</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.card-widget</span><span class="selector-class">.card-categories</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">3px</span> <span class="number">#50ccd5</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.card-widget</span><span class="selector-class">.card-tags</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">3px</span> <span class="number">#50ccd5</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.card-widget</span><span class="selector-class">.card-archives</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">3px</span> <span class="number">#50ccd5</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.card-widget</span><span class="selector-class">.card-webinfo</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">3px</span> <span class="number">#50ccd5</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#aside-content</span> <span class="selector-class">.aside-list</span> &gt; <span class="selector-class">.aside-list-item</span> &#123;</span><br><span class="line">    <span class="attribute">transition</span>: background-color <span class="number">0.3s</span> ease, color <span class="number">0.3s</span> ease,</span><br><span class="line">        border-radius <span class="number">0.3s</span> ease, transform <span class="number">0.2s</span> ease, padding-left <span class="number">0.3s</span> ease,</span><br><span class="line">        margin-left <span class="number">0.3s</span> ease; <span class="comment">/* 添加过渡效果 */</span></span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">5px</span> <span class="number">5px</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.aside-list-item</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#50ccd5</span>; <span class="comment">/* 蓝色背景 */</span></span><br><span class="line">    <span class="attribute">color</span>: white; <span class="comment">/* 白色字体 */</span></span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">8px</span>; <span class="comment">/* 四个角为圆角 */</span></span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1.05</span>); <span class="comment">/* 略微放大 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.aside-list-item</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">a</span><span class="selector-class">.title</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: white <span class="meta">!important</span>; <span class="comment">/* 白色字体 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.aside-list-item</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">time</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: white <span class="meta">!important</span>; <span class="comment">/* 白色字体 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="最重要的！"><a href="#最重要的！" class="headerlink" title="最重要的！"></a>最重要的！</h2><p>别忘了！<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> hexo魔改系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo魔改 | 修改首页文章数量</title>
      <link href="/post/cec4690b.html"/>
      <url>/post/cec4690b.html</url>
      
        <content type="html"><![CDATA[<h1 id="hexo魔改-修改文章数量"><a href="#hexo魔改-修改文章数量" class="headerlink" title="hexo魔改 | 修改文章数量"></a>hexo魔改 | 修改文章数量</h1><p>当我们首页文章数量大于 10 的时候，会发现出现分页情况。<br>然而首页下方还空着许多，和侧边栏明显不协调。<br><img src="https://typora-birdy.oss-cn-guangzhou.aliyuncs.com/b584c7a6449e74d0c4240dbc1a06f57.png" alt="b584c7a6449e74d0c4240dbc1a06f57.png"><br>笔者一开始在主题配置文件中找了半天，结果没找到相应的配置。<br>结果最终，它在博客文件夹根目录下的 config,yml<br>我们找到下面的(大约在第65行)</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Home page setting</span></span><br><span class="line"><span class="comment"># path: Root path for your blogs index page. (default = &#x27;&#x27;)</span></span><br><span class="line"><span class="comment"># per_page: Posts displayed per page. (0 = disable pagination)</span></span><br><span class="line"><span class="comment"># order_by: Posts order. (Order by date descending by default)</span></span><br><span class="line"><span class="attr">index_generator:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">&quot;&quot;</span><span class="string">hexo</span> <span class="string">修改文章数量</span></span><br><span class="line">    <span class="attr">per_page:</span> <span class="number">10</span></span><br><span class="line">    <span class="attr">order_by:</span> <span class="string">-date</span></span><br></pre></td></tr></table></figure><p>这个 <strong>per_page</strong> 属性也就是控制了每页的文章数量。我们将他修改为 16 或者更多。<br>最后-&gt;<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> hexo魔改系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>深度学习 | EECS 498-007 / 598-005 | Image Classification</title>
      <link href="/post/f1db88d.html"/>
      <url>/post/f1db88d.html</url>
      
        <content type="html"><![CDATA[<h1 id="Image-Classification"><a href="#Image-Classification" class="headerlink" title="Image Classification"></a>Image Classification</h1><p><a href="https://en.wikipedia.org/wiki/Robustness">Robustness</a> 鲁棒性</p><h2 id="Edge-images"><a href="#Edge-images" class="headerlink" title="Edge images"></a>Edge images</h2><p><a href="https://en.wikipedia.org/wiki/Edge_detection">Edge Detection</a><br><a href="https://www.cnblogs.com/xyf327/p/14745908.html">有关边缘检测算法</a></p><h2 id="Image-Classification-1"><a href="#Image-Classification-1" class="headerlink" title="Image Classification:"></a>Image Classification:</h2><p>input: image<br>output: Assign image to one of a fixed set of categories.<br><strong>Problem</strong>: Semantic Gap(语义差距)<br>Object Detection:<br><img src="https://typora-birdy.oss-cn-guangzhou.aliyuncs.com/20240406104140.png" style="zoom: 50%"><br>    One way to perform is via image classification of different sliding windows im the image. In a nutshell, it means classify different sub-regions of the image so we could look at s sub region over here and then classify it as background, horse, person, car or a truck…</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">classify_image</span>(<span class="params">image</span>):</span><br><span class="line"><span class="comment"># Some magic here?</span></span><br><span class="line"><span class="keyword">return</span> class_label</span><br></pre></td></tr></table></figure><h2 id="Machine-Learning-Data-Driven-Approach"><a href="#Machine-Learning-Data-Driven-Approach" class="headerlink" title="Machine Learning:Data-Driven Approach"></a>Machine Learning:Data-Driven Approach</h2><ol><li>Collect a dataset of images and labels</li><li>Use Machine Learning to train a classifier</li><li>Evaluate the classifier on new images<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">train</span>(<span class="params">images, labels</span>):</span><br><span class="line"><span class="comment"># Machine learning</span></span><br><span class="line"><span class="comment"># Memorize all data and labels</span></span><br><span class="line"><span class="keyword">return</span> model</span><br></pre></td></tr></table></figure></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">predict</span>(<span class="params">model, test_images</span>):</span><br><span class="line"><span class="comment"># Use model to predict labels</span></span><br><span class="line"><span class="comment"># Predict the label of the most similar training image</span></span><br><span class="line"><span class="keyword">return</span> test_labels</span><br></pre></td></tr></table></figure><h2 id="Distance-Metric-to-compare-images"><a href="#Distance-Metric-to-compare-images" class="headerlink" title="Distance Metric to compare images"></a>Distance Metric to compare images</h2><h3 id="曼哈顿距离"><a href="#曼哈顿距离" class="headerlink" title="曼哈顿距离:"></a>曼哈顿距离:</h3><p><strong>L1(Manhattan) distance:</strong> $d_1(I_1,I_2) = \sum_p|I_1^p-I_2^p|$</p><p><img src="https://typora-birdy.oss-cn-guangzhou.aliyuncs.com/20240412191451.png" style="zoom: 50%"><br><img src="https://typora-birdy.oss-cn-guangzhou.aliyuncs.com/20240409085507.png" style="zoom:50%"></p><h2 id="Nearest-Neighbor-Decision-Boundaries"><a href="#Nearest-Neighbor-Decision-Boundaries" class="headerlink" title="Nearest Neighbor Decision Boundaries"></a>Nearest Neighbor Decision Boundaries</h2><p>Decision Boundarie is the boundary between two classification regions.<br><img src="https://typora-birdy.oss-cn-guangzhou.aliyuncs.com/20240409090934.png" style="zoom:50%"><br>Decision Boundarie can be nosiy; affected by outliers.<br><img src="https://typora-birdy.oss-cn-guangzhou.aliyuncs.com/20240409091231.png" style="zoom: 70%"></p><h2 id="K-Nearest-Neighbors"><a href="#K-Nearest-Neighbors" class="headerlink" title="K-Nearest Neighbors"></a>K-Nearest Neighbors</h2><h3 id="Using-more-neighbors-helps-smooth-out-rough-decision-boundaries"><a href="#Using-more-neighbors-helps-smooth-out-rough-decision-boundaries" class="headerlink" title="Using more neighbors helps smooth out rough decision boundaries."></a>Using more neighbors helps smooth out rough decision boundaries.</h3><p><img src="https://typora-birdy.oss-cn-guangzhou.aliyuncs.com/20240409090850.png" style="zoom:75%"></p><h3 id="Using-more-neighbors-helps-reduce-the-effect-of-outliers"><a href="#Using-more-neighbors-helps-reduce-the-effect-of-outliers" class="headerlink" title="Using more neighbors helps reduce the effect of outliers."></a>Using more neighbors helps reduce the effect of outliers.</h3><p><img src="https://typora-birdy.oss-cn-guangzhou.aliyuncs.com/20240409091528.png" style="zoom:75%"></p><h3 id="When-K-gt-1-there-can-be-ties-between-classes-Need-to-break-somehow"><a href="#When-K-gt-1-there-can-be-ties-between-classes-Need-to-break-somehow" class="headerlink" title="When K &gt; 1 there can be ties between classes. Need to break somehow!"></a>When K &gt; 1 there can be ties between classes. Need to break somehow!</h3><p><img src="https://typora-birdy.oss-cn-guangzhou.aliyuncs.com/20240409091632.png" style="zoom:75%"><br>白色区域均有三个最近的邻居。</p><h3 id="欧几里得距离"><a href="#欧几里得距离" class="headerlink" title="欧几里得距离"></a>欧几里得距离</h3><p><strong>L2(Euclidean) distance</strong> = $d_2(I_1, I_2) = \sqrt{\sum_{p}(I_1^p - I_2^p) ^ 2}$</p><h3 id="Setting-Hyperparameters"><a href="#Setting-Hyperparameters" class="headerlink" title="Setting Hyperparameters"></a>Setting Hyperparameters</h3><p>Among the three ideas above, The best idea is <strong>Idea #3</strong><br><img src="https://typora-birdy.oss-cn-guangzhou.aliyuncs.com/20240412200840.png" alt="image.png"><br><img src="https://typora-birdy.oss-cn-guangzhou.aliyuncs.com/20240412201137.png" style="zoom: 50%"><br>当然，我们也可以将数据集划分为更多，以此更好估计我们的泛化性能。<br>也就是<strong>交叉验证</strong><br><img src="https://typora-birdy.oss-cn-guangzhou.aliyuncs.com/20240412201236.png" alt="image.png"><br>随着训练的数量越来越多<br><img src="https://typora-birdy.oss-cn-guangzhou.aliyuncs.com/20240412201717.png" style="zoom: 50%"><br><img src="https://typora-birdy.oss-cn-guangzhou.aliyuncs.com/20240412201741.png" style="zoom: 50%"><br><img src="https://typora-birdy.oss-cn-guangzhou.aliyuncs.com/20240412201753.png" style="zoom: 50%"><br><img src="https://typora-birdy.oss-cn-guangzhou.aliyuncs.com/20240412201811.png" style="zoom: 50%"><br>We can see the nearest neighbor classifier performs well.</p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> Deep Learning </tag>
            
            <tag> EECS 498-007 / 598-005 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一生一芯 | 状态机模型</title>
      <link href="/post/3296e98d.html"/>
      <url>/post/3296e98d.html</url>
      
        <content type="html"><![CDATA[<h1 id="状态机"><a href="#状态机" class="headerlink" title="状态机"></a>状态机</h1><p><strong>计算机系统都是状态机</strong></p><p>一个简单的计算机系统：程序直接在 CPU 上运行(无操作系统)<br>    <img src="https://typora-birdy.oss-cn-guangzhou.aliyuncs.com/20240331002043.png" alt="image.png"><br>这三个抽象层次(程序、指令集、CPU) 都可以用状态机来理解。</p><h2 id="程序是个状态机："><a href="#程序是个状态机：" class="headerlink" title="程序是个状态机："></a>程序是个状态机：</h2><h3 id="C-语言的组成："><a href="#C-语言的组成：" class="headerlink" title="C 语言的组成："></a>C 语言的组成：</h3><pre><code>变量：计算的对象语句：计算的操作流程输入输出函数：让变量与外界交互</code></pre><h3 id="C-程序的状态机模型"><a href="#C-程序的状态机模型" class="headerlink" title="C 程序的状态机模型"></a>C 程序的状态机模型</h3><p><strong>状态集合</strong>：$S = \{<V, PC>\}$<br>    <strong>V</strong> = $\{v1, v2, v3, …\} = 程序中所有变量的取值(包括全局变量和局部变量)$<br>    <strong>PC</strong> = 程序计数器 = 当前执行的语句位置<br><strong>激励事件</strong> $E = \{语句\}$<br>    执行 PC 指向的语句<br><strong>状态转移规则</strong>：<br>    $next: S \times E -&gt; S$<br>    语句的语义$(semantics)$<br><strong>初始状态</strong> $S_0 = <V_0,~ main 函数的第一条语句 >$<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 1 **/</span> <span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="comment">/* 2 **/</span><span class="type">int</span> x = <span class="number">1</span>;</span><br><span class="line"><span class="comment">/* 3 **/</span><span class="type">int</span> y = <span class="number">2</span>;</span><br><span class="line"><span class="comment">/* 4 **/</span><span class="type">int</span> z = x + y;</span><br><span class="line"><span class="comment">/* 5 **/</span><span class="built_in">printf</span>(<span class="string">&quot;z = %d\n&quot;</span>, z);</span><br><span class="line"><span class="comment">/* 6 **/</span><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="comment">/* 7 **/</span> &#125;</span><br></pre></td></tr></table></figure><br>对于的状态转移<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">S = &lt;x, y, z, PC&gt;</span><br><span class="line">S0 = &lt;?, ?, ?, <span class="number">2</span>&gt; <span class="comment">// &#x27;?&#x27; 表示未初始化</span></span><br><span class="line">S0 = &lt;<span class="number">1</span>, ?, ?, <span class="number">3</span>&gt;</span><br><span class="line">S0 = &lt;<span class="number">1</span>, <span class="number">2</span>, ?, <span class="number">4</span>&gt;</span><br><span class="line">S0 = &lt;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>&gt;</span><br><span class="line">S0 = &lt;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">6</span>&gt; <span class="comment">// 输出 &quot;z = 3&quot;</span></span><br><span class="line">S0 = &lt;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, 结束&gt; </span><br></pre></td></tr></table></figure></p><h3 id="C-程序真的是从-main-第一条语句开始执行吗？"><a href="#C-程序真的是从-main-第一条语句开始执行吗？" class="headerlink" title="C 程序真的是从 $main()$ 第一条语句开始执行吗？"></a>C 程序真的是从 $main()$ 第一条语句开始执行吗？</h3><p>理解程序的动态行为 -&gt; trace 工具<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;<span class="keyword">return</span> <span class="number">0</span>;&#125;</span><br></pre></td></tr></table></figure><br>再用 strace 工具<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gcc a.c</span><br><span class="line">strace ./1.out</span><br></pre></td></tr></table></figure><br><img src="https://typora-birdy.oss-cn-guangzhou.aliyuncs.com/20240409232712.png"/><br>我们发现它执行了许多操作，但事实上，这段代码只有简单的一行，并且直接 return 0; 如果真的从 main 函数开始执行，那么应该直接退出。所以我们猜测这些操作要么是在 main 函数执行之前做的，要么是在返回之后。<br>1.c 中我们加入死循环。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;<span class="keyword">while</span>(<span class="number">1</span>); <span class="keyword">return</span> <span class="number">0</span>;&#125;</span><br></pre></td></tr></table></figure><br>我们发现程序卡在了这里。说明是在 main 函数之前输出的<br><img src="https://typora-birdy.oss-cn-guangzhou.aliyuncs.com/20240409233134.png" alt="image.png"><br>说明了不是从 main() 函数第一条语句开始执行。</p><p>观察最初的 1.c<br>我们发现退出程序后还有一个 $exit_group()$<br>实际上，程序并不是在 $return~0$ 之后结束，它还会执行一些额外的操作。</p><p>我们使用 gdb 调试工具。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gdb 1</span><br><span class="line">starti</span><br></pre></td></tr></table></figure><br>发现程序马上停在程序的开始。<br><img src="https://typora-birdy.oss-cn-guangzhou.aliyuncs.com/20240409233559.png" alt="image.png"><br>同时，这个 _start() 函数并不在我们 1.c 文件中，在别的地方，也说明不是从 main() 开始。</p><p>查看 ISO/IEC 9899:201x:<br><img src="https://typora-birdy.oss-cn-guangzhou.aliyuncs.com/20240410102808.png" alt="image.png"></p><p><strong>执行环境调用一个专门的 C 函数。</strong><br>执行环境有两种：独立环境 freestanding 和 宿主环境 hosted</p><h3 id="Freestanding-environment"><a href="#Freestanding-environment" class="headerlink" title="Freestanding environment"></a>Freestanding environment</h3><p>在独立环境下，这个专门的 C 函数由具体实现来决定。用它去调用 main 函数。<br><img src="https://typora-birdy.oss-cn-guangzhou.aliyuncs.com/20240410102938.png" alt="image.png"></p><h3 id="Hosted-environment"><a href="#Hosted-environment" class="headerlink" title="Hosted environment"></a>Hosted environment</h3><p>在宿主环境下，这个专门的 C 函数名称为 main<br><img src="https://typora-birdy.oss-cn-guangzhou.aliyuncs.com/20240410102953.png" alt="image.png"><br><img src="https://typora-birdy.oss-cn-guangzhou.aliyuncs.com/20240410103041.png" alt="image.png"><br>手册定义了这个函数在宿主环境下叫 main</p><h3 id="Program-execution"><a href="#Program-execution" class="headerlink" title="Program execution"></a>Program execution</h3><p><img src="https://typora-birdy.oss-cn-guangzhou.aliyuncs.com/20240410103600.png" alt="image.png"><br>可以看出一些语句的执行会引起副作用，导致执行环境的状态变化。由此可见，C 程序确实是一个状态机。</p><h2 id="CPU-是个状态机"><a href="#CPU-是个状态机" class="headerlink" title="CPU 是个状态机"></a>CPU 是个状态机</h2><p>CPU = 数字逻辑电路 = 状态机<br>数字逻辑电路 = 组合逻辑电路 + 时序逻辑电路<br><strong>状态集合</strong>：$S = \{&lt; 时序逻辑元件的值 &gt;\}$<br>    具体包括寄存器、存储器、触发器等<br><strong>激励事件</strong> $E = \{ 组合逻辑 \}$<br><strong>状态转移规则</strong>：<br>    $next: S \times E -&gt; S$<br>    由设计中的组合逻辑电路决定<br>    依据：架构师的设计文档<br><strong>初始状态</strong> $S_0 = &lt; 复位时时序逻辑元件的值  &gt;$<br><img src="https://typora-birdy.oss-cn-guangzhou.aliyuncs.com/20240410105912.png" alt="image.png"></p><h2 id="指令集是个状态机"><a href="#指令集是个状态机" class="headerlink" title="指令集是个状态机"></a>指令集是个状态机</h2><p>指令集是软件和硬件之间的接口。<br>指令集是一本手册规范，定义了 CPU 执行指令的行为。<br><strong>状态集合</strong>：$S = \{&lt; R, M &gt;\}$<br>    $R = \{PC, x_0, x_1, x_2, …\}$<br>    PC = 程序计数器 = 当前执行的指令位置<br>    M = 内存<br><strong>激励事件</strong> $E = \{ 指令 \}$<br>    执行 PC 指向的指令<br><strong>状态转移规则</strong>：<br>    $next: S \times E -&gt; S$<br>    指令的语义$(semantics)$<br><strong>初始状态</strong> $S_0 = &lt; R_0, M_0  &gt;$</p><h3 id="用-C-程序理解指令"><a href="#用-C-程序理解指令" class="headerlink" title="用 C 程序理解指令"></a>用 C 程序理解指令</h3><p>计算 1+2+…+100 的指令序列<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// PC: instruction      | label: statement    </span></span><br><span class="line">    <span class="number">0</span>: li    x1,<span class="number">0</span>       |   pc0: x1 = <span class="number">0</span>;</span><br><span class="line">    <span class="number">1</span>: li    x2,<span class="number">0</span>       |   pc1: x2 = <span class="number">0</span>;</span><br><span class="line">    <span class="number">2</span>: li    x3,<span class="number">100</span>     |   pc2: x3 = <span class="number">100</span>;</span><br><span class="line">    <span class="number">3</span>: addi  x2,x2,<span class="number">1</span>    |   pc3: x2 = x2+<span class="number">1</span>;</span><br><span class="line">    <span class="number">4</span>: add   x1,x1,x2   |   pc4: x1 = x1+x2;</span><br><span class="line">    <span class="number">5</span>: blt   x2,x3,<span class="number">3</span>    |   pc5: <span class="keyword">if</span>(x2 &lt; x3) <span class="keyword">goto</span> pc3; <span class="comment">// branch if less than</span></span><br><span class="line">    <span class="number">6</span>: j     <span class="number">6</span>          |   pc6: <span class="keyword">goto</span> pc6;</span><br></pre></td></tr></table></figure><br>指令就是用来改变状态机状态的激励</p><h4 id="指令的两种表示"><a href="#指令的两种表示" class="headerlink" title="指令的两种表示"></a>指令的两种表示</h4><ol><li>符号化表示 - 面向程序员</li><li>编码表示 - 面向电路设计</li></ol><p>指令集手册实际上通过定义状态机进行状态转移的规则，来从概念上描述一台抽象计算机所具备的，程序可以使用的功能。</p><h2 id="程序如何在计算机上运行"><a href="#程序如何在计算机上运行" class="headerlink" title="程序如何在计算机上运行"></a>程序如何在计算机上运行</h2><p><img src="https://typora-birdy.oss-cn-guangzhou.aliyuncs.com/20240410132319.png" alt="image.png"></p><h3 id="汇编"><a href="#汇编" class="headerlink" title="汇编"></a>汇编</h3><p>汇编指令 = 指令的符号化表示<br>汇编程序 = 驱动指令集状态机的输入<br>    执行汇编程序 = 指令集状态机发生状态转移</p><h3 id="CPU-结构设计"><a href="#CPU-结构设计" class="headerlink" title="CPU 结构设计"></a>CPU 结构设计</h3><p><img src="https://typora-birdy.oss-cn-guangzhou.aliyuncs.com/20240410132538.png" alt="image.png"></p><h3 id="程序的运行"><a href="#程序的运行" class="headerlink" title="程序的运行"></a>程序的运行</h3><p><img src="https://typora-birdy.oss-cn-guangzhou.aliyuncs.com/20240410132711.png" alt="image.png"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p><img src="https://typora-birdy.oss-cn-guangzhou.aliyuncs.com/20240410133112.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> 一生一芯 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 一生一芯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo魔改 | 添加aplayer音乐播放器</title>
      <link href="/post/c0d75012.html"/>
      <url>/post/c0d75012.html</url>
      
        <content type="html"><![CDATA[<h1 id="hexo-添加-aplayer-播放器"><a href="#hexo-添加-aplayer-播放器" class="headerlink" title="hexo 添加 aplayer 播放器"></a><strong>hexo 添加 aplayer 播放器</strong></h1><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><p>先安装插件 <a href="https://github.com/MoePlayer/hexo-tag-aplayer">hexo-tag-aplayer</a><br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-tag-aplayer</span><br></pre></td></tr></table></figure></p><h2 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h2><p>在 hexo 的根目录配置文件 _config.yml 添加<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">aplayer:</span></span><br><span class="line">  <span class="attr">meting:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">asset_inject:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><br>再在主题配置文件中，以 _config.butterfly.yml 中找到  aplayerInject<br>将 enable, per_page 改为 true<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Inject the css and script (aplayer/meting)</span></span><br><span class="line"><span class="attr">aplayerInject:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">per_page:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><br>再找到 inject 在 bottom 下面添加<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">&lt;div</span> <span class="string">class=&quot;aplayer</span> <span class="literal">no</span><span class="string">-destroy&quot;</span> <span class="string">data-id=&quot;2740999019&quot;</span> <span class="string">data-server=&quot;netease&quot;</span> <span class="string">data-type=&quot;playlist&quot;</span> <span class="string">data-fixed=&quot;true&quot;</span> <span class="string">data-autoplay=&quot;true&quot;&gt;</span> <span class="string">&lt;/div&gt;</span></span><br></pre></td></tr></table></figure><br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">    <span class="attr">head:</span></span><br><span class="line">    <span class="attr">bottom:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">&lt;div</span> <span class="string">class=&quot;aplayer</span> <span class="literal">no</span><span class="string">-destroy&quot;</span> <span class="string">data-id=&quot;2740999019&quot;</span> <span class="string">data-server=&quot;netease&quot;</span> <span class="string">data-type=&quot;playlist&quot;</span> <span class="string">data-fixed=&quot;true&quot;</span> <span class="string">data-autoplay=&quot;true&quot;&gt;</span> <span class="string">&lt;/div&gt;</span></span><br></pre></td></tr></table></figure><br><strong>这里的 data-id 对应相应音乐软件播放列表的 id</strong></p><p>以网易云为例子，在官网的界面打开，看链接可以找到 id<br><img src="https://typora-birdy.oss-cn-guangzhou.aliyuncs.com/20240406194433.png" alt="image.png"></p><p>为了让切换页面之后音乐不会暂停。<br>在主题配置文件中启用 pjax<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">pjax:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></p><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p>最后 hexo clean &amp; hexo g &amp; hexo s 三连，即可看到播放器。<br><img src="https://typora-birdy.oss-cn-guangzhou.aliyuncs.com/20240406194841.png" alt="image.png"></p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://butterfly.js.org/posts/507c070f/#%E6%8F%92%E5%85%A5-Aplayer-html">butterfly 官方文档</a></p>]]></content>
      
      
      <categories>
          
          <category> hexo魔改系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> butterfly </tag>
            
            <tag> aplayer </tag>
            
            <tag> 音乐播放器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NJU-ics | PA0:环境的配置</title>
      <link href="/post/f6ba7c15.html"/>
      <url>/post/f6ba7c15.html</url>
      
        <content type="html"><![CDATA[<h1 id="NJU-PA0"><a href="#NJU-PA0" class="headerlink" title="NJU PA0"></a>NJU PA0</h1><p>使用教程提供的源再进行sudo apt install … 可能会出现 Unmet dependencies 此类报错<br>可以安装 aptitude<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install aptitude</span><br><span class="line">sudo aptitude install &lt;package&gt;</span><br></pre></td></tr></table></figure><br>然后它会提示你，选 n 进行降级。再选 Y 确认<br>或者<br>将 /etc/apt/sources.list 下的源改为<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted universe multiverse</span><br></pre></td></tr></table></figure><br>再输入<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get upgrade</span><br></pre></td></tr></table></figure></p><p>对于 git，克隆 ssh 仓库<br>可能会遇到 ssh: connect to host github.com port 22: Connection refused 这样的报错<br>解决方案是在 ~/.ssh/config<br>如果没有则 touch ~/.ssh/config<br>vim ~/.ssh/config<br>在其中添加这几行：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Host github.com</span><br><span class="line">  Hostname ssh.github.com</span><br><span class="line">  Port 443</span><br></pre></td></tr></table></figure><br>然后再进行 git clone </p><p>当我们运行 make menuconfig<br>出现以下报错<br><img src="https://typora-birdy.oss-cn-guangzhou.aliyuncs.com/20240321214235.png" alt="image.png"><br>我们需要安装这些缺少项<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install bison</span><br></pre></td></tr></table></figure><br>再尝试输入 make<br><img src="https://typora-birdy.oss-cn-guangzhou.aliyuncs.com/20240321214424.png" alt="image.png"><br>同理，安装<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install flex</span><br></pre></td></tr></table></figure><br>即可正常编译</p>]]></content>
      
      
      <categories>
          
          <category> NJU-PA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NJU-PA </tag>
            
            <tag> 计算机系统基础 </tag>
            
            <tag> ics </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo魔改 | 添加旋转小风车</title>
      <link href="/post/e03cfb73.html"/>
      <url>/post/e03cfb73.html</url>
      
        <content type="html"><![CDATA[<p>打开 _config.butterfly.yml<br>找到 Beautify，将 enable 设置为 true，title-prefix-icon 设置为 ‘\f863’<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Beautify (美化頁面顯示)</span></span><br><span class="line"><span class="attr">beautify:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">field:</span> <span class="string">post</span> <span class="comment"># site/post</span></span><br><span class="line">    <span class="attr">title-prefix-icon:</span> <span class="string">&#x27;\f863&#x27;</span> <span class="comment"># &#x27;\f0c1&#x27;</span></span><br><span class="line">    <span class="attr">title-prefix-icon-color:</span> <span class="string">&quot;#F47466&quot;</span></span><br></pre></td></tr></table></figure><br>在主题文件夹 source/css/ 中创建一个 icon.css<br>内容如下：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 文章页H1-H6图标样式效果 */</span></span><br><span class="line"><span class="comment">/* 控制风车转动速度 4s那里可以自己调节快慢 */</span></span><br><span class="line"><span class="selector-tag">h1</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-tag">h2</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-tag">h3</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-tag">h4</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-tag">h5</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-tag">h6</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  -webkit-<span class="attribute">animation</span>: ccc <span class="number">4s</span> linear infinite;</span><br><span class="line">  <span class="attribute">animation</span>: ccc <span class="number">4s</span> linear infinite;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 控制风车转动方向 -1turn 为逆时针转动，1turn 为顺时针转动，相同数字部分记得统一修改 */</span></span><br><span class="line"><span class="keyword">@-webkit-keyframes</span> ccc &#123;</span><br><span class="line">  <span class="number">0%</span> &#123;</span><br><span class="line">    -webkit-<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">0deg</span>);</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">0deg</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-tag">to</span> &#123;</span><br><span class="line">    -webkit-<span class="attribute">transform</span>: <span class="built_in">rotate</span>(-<span class="number">1turn</span>);</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(-<span class="number">1turn</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> ccc &#123;</span><br><span class="line">  <span class="number">0%</span> &#123;</span><br><span class="line">    -webkit-<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">0deg</span>);</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">0deg</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-tag">to</span> &#123;</span><br><span class="line">    -webkit-<span class="attribute">transform</span>: <span class="built_in">rotate</span>(-<span class="number">1turn</span>);</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(-<span class="number">1turn</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 设置风车颜色 */</span></span><br><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h1</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#ef50a8</span>;</span><br><span class="line">  <span class="attribute">margin-left</span>: -<span class="number">1.55rem</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">1.3rem</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: -<span class="number">0.23rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h2</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fb7061</span>;</span><br><span class="line">  <span class="attribute">margin-left</span>: -<span class="number">1.35rem</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">1.1rem</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: -<span class="number">0.12rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h3</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#ffbf00</span>;</span><br><span class="line">  <span class="attribute">margin-left</span>: -<span class="number">1.22rem</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">0.95rem</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: -<span class="number">0.09rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h4</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#a9e000</span>;</span><br><span class="line">  <span class="attribute">margin-left</span>: -<span class="number">1.05rem</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">0.8rem</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: -<span class="number">0.09rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h5</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#57c850</span>;</span><br><span class="line">  <span class="attribute">margin-left</span>: -<span class="number">0.9rem</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">0.7rem</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">0rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h6</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#5ec1e0</span>;</span><br><span class="line">  <span class="attribute">margin-left</span>: -<span class="number">0.9rem</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">0.66rem</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">0rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* s设置风车hover动效 6s那里可以自己调节快慢*/</span></span><br><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h1</span><span class="selector-pseudo">:hover</span>,</span><br><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h2</span><span class="selector-pseudo">:hover</span>,</span><br><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h3</span><span class="selector-pseudo">:hover</span>,</span><br><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h4</span><span class="selector-pseudo">:hover</span>,</span><br><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h5</span><span class="selector-pseudo">:hover</span>,</span><br><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h6</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">var</span>(--theme-color);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h1</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h2</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h3</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h4</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h5</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h6</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">var</span>(--theme-color);</span><br><span class="line">  -webkit-<span class="attribute">animation</span>: ccc <span class="number">6s</span> linear infinite;</span><br><span class="line">  <span class="attribute">animation</span>: ccc <span class="number">6s</span> linear infinite;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>并在 _config.butterfly.yml 中找到 inject，在 head 下添加<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">- &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/<span class="attribute">icon</span><span class="selector-class">.css</span>&quot;&gt;</span><br></pre></td></tr></table></figure><br>也就是<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># Inject</span><br><span class="line"># Insert the <span class="selector-tag">code</span> <span class="selector-tag">to</span> head (before &#x27;&lt;/head&gt;&#x27; tag) and the <span class="attribute">bottom</span> (before &#x27;&lt;/<span class="selector-tag">body</span>&gt;&#x27; tag)</span><br><span class="line"># 插入代码到头部 &lt;/head&gt; 之前 和 底部 &lt;/<span class="selector-tag">body</span>&gt; 之前</span><br><span class="line">inject:</span><br><span class="line">    head:</span><br><span class="line">        - &lt;link rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;/css/icon.css&quot;</span>&gt;</span><br><span class="line">    bottom:</span><br></pre></td></tr></table></figure></p><p>最后三连<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></p><p><a href="https://zhuanlan.zhihu.com/p/584833753">参考链接</a></p>]]></content>
      
      
      <categories>
          
          <category> hexo魔改系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> butterfly </tag>
            
            <tag> 旋转小风车 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法 | 动态规划:数字三角形模型</title>
      <link href="/post/9a8bfad7.html"/>
      <url>/post/9a8bfad7.html</url>
      
        <content type="html"><![CDATA[<h2 id="摘花生"><a href="#摘花生" class="headerlink" title="摘花生"></a>摘花生</h2><p><a href="https://www.acwing.com/problem/content/1017/">原题链接</a><br><div class="mermaid-wrap"><pre class="mermaid-src" hidden>   graph LR;id1((动态规划)) --&gt; 状态表示 --f[i,j] --&gt; 集合 --&gt; 所有从1,1走到i,j的路线  状态表示 --&gt; 属性 --&gt; MAX  id1((动态规划)) --&gt; 状态计算  </pre></div><br>状态计算：集合的划分。(很重要的划分依据：“最后”)<br>    集合划分依据：1.不重复(但并不是所有情况都要满足) 2.不漏<br>    <img src="https://typora-birdy.oss-cn-guangzhou.aliyuncs.com/20240326232542.png" alt="image.png"></p><p>从 $(1,1)$ 走到 $(i, j)$ 的所有路线的最大值也就是 $f(n, m)$</p><p>$f[i, j] = max(f[i - 1, j], f[i, j - 1]) + w[i, j]$<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e3</span> + <span class="number">50</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> f[N][N];</span><br><span class="line"><span class="type">int</span> w[N][N];</span><br><span class="line"><span class="type">int</span> t;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(t --)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> r, c;</span><br><span class="line">        cin &gt;&gt; r &gt;&gt; c;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= r; i ++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= c; j ++)</span><br><span class="line">                cin &gt;&gt; w[i][j];</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= r; i ++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= c; j ++)</span><br><span class="line">                f[i][j] = <span class="built_in">max</span>(f[i - <span class="number">1</span>][j], f[i][j - <span class="number">1</span>]) + w[i][j];</span><br><span class="line"></span><br><span class="line">        cout &lt;&lt; f[r][c] &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="最低通行费"><a href="#最低通行费" class="headerlink" title="最低通行费"></a>最低通行费</h2><p><a href="https://www.acwing.com/problem/content/1020/">原题链接</a><br>从 “商人必须在 (2N−1) 个单位时间穿越出去。” 得出不能走回头路。<br>本质上和摘花生这题差不多<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">150</span>, INF = <span class="number">1e9</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> w[N][N], f[N][N];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j ++)</span><br><span class="line">            cin &gt;&gt; w[i][j];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j ++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(i == <span class="number">1</span> &amp;&amp; j == <span class="number">1</span>)</span><br><span class="line">                f[i][j] = w[i][j];</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                f[i][j] = INF;</span><br><span class="line">                <span class="keyword">if</span>(i &gt; <span class="number">1</span>)</span><br><span class="line">                    f[i][j] = <span class="built_in">min</span>(f[i][j], f[i - <span class="number">1</span>][j] + w[i][j]);</span><br><span class="line">                <span class="keyword">if</span>(j &gt; <span class="number">1</span>)</span><br><span class="line">                    f[i][j] = <span class="built_in">min</span>(f[i][j], f[i][j - <span class="number">1</span>] + w[i][j]);</span><br><span class="line">            &#125;   </span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    cout &lt;&lt; f[n][n] &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">150</span>, INF = <span class="number">1e9</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> w[N][N], f[N][N];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j ++)</span><br><span class="line">            cin &gt;&gt; w[i][j];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">memset</span>(f, <span class="number">0x3f</span>, <span class="keyword">sizeof</span> f);</span><br><span class="line">    f[<span class="number">1</span>][<span class="number">1</span>] = w[<span class="number">1</span>][<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j ++)</span><br><span class="line">        &#123;</span><br><span class="line">            f[i][j] = <span class="built_in">min</span>(f[i][j], f[i - <span class="number">1</span>][j] + w[i][j]);</span><br><span class="line">            f[i][j] = <span class="built_in">min</span>(f[i][j], f[i][j - <span class="number">1</span>] + w[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    cout &lt;&lt; f[n][n] &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="NOIP2000-提高组-方格取数"><a href="#NOIP2000-提高组-方格取数" class="headerlink" title="[NOIP2000 提高组] 方格取数"></a>[NOIP2000 提高组] 方格取数</h2><p><a href="https://www.luogu.com.cn/problem/P1004">原题链接</a></p><div class="mermaid-wrap"><pre class="mermaid-src" hidden>   graph LR;id1((动态规划)) --&gt; 状态表示 --f[i1,j1,i2,j2] --&gt; 集合 --&gt; 所有从1,1与1,1分别走到i1,j1和i2,j2的路径  状态表示 --&gt; 属性 --&gt; MAX  id1((动态规划)) --&gt; 状态计算  </pre></div><p>同一个格子不能被重复选择。<br>只有在 i1 + j1 == i2 + j2 时，两条路径的格子才可能重合。<br>状态表示可以优化为：f[k, i1, i2]  表示所有从 (1, 1), (1, 1) 分别走到 (i1, k - i1), (i2, k - i2) 的路径的最大值。<br><div class="mermaid-wrap"><pre class="mermaid-src" hidden>   graph LR;id1((动态规划)) --&gt; 状态表示 --f[k, i1, i2] --&gt; 集合 --&gt; 所有从1,1和1,1分别走到i1,k-i1和i2,k-i2的路径  状态表示 --&gt; 属性 --&gt; MAX  id1((动态规划)) --&gt; 状态计算  </pre></div></p><p><img src="https://typora-birdy.oss-cn-guangzhou.aliyuncs.com/20240327181205.png" style="zoom:70%"  ><br>第一种情况:<br>    第一条从 $(1, 1) -&gt; (i_1 - 1, j_1) -&gt; (i_1, j_1)$,<br>    第二条从 $(1, 1) -&gt; (i_2 - 1, j_2) -&gt; (i_2, j_2)$<br>    $f[k, i_1, i_2] = max(f[k, i_1, i_2], f[k - 1, i_1-1, i_2-1] + tmp)$<br>第二种情况：<br>    第一条从 $(1, 1) -&gt; (i_1 - 1, j_1) -&gt; (i_1, j_1)$,<br>    第二条从 $(1, 1) -&gt; (i_2, j_2 - 1) -&gt; (i_2, j_2)$<br>    $f[k, i_1, i_2] = max(f[k, i_1, i_2], f[k - 1, i_1-1, i_2] + tmp)$<br>第三种情况：<br>    第一条从 $(1, 1) -&gt; (i_1, j_1 - 1) -&gt; (i_1, j_1)$,<br>    第二条从 $(1, 1) -&gt; (i_2 - 1, j_2) -&gt; (i_2, j_2)$<br>    $f[k, i_1, i_2] = max(f[k, i_1, i_2], f[k - 1, i_1, i_2-1] + tmp)$<br>第四种情况：<br>    第一条从 $(1, 1) -&gt; (i_1, j_1 - 1) -&gt; (i_1, j_1)$,<br>    第二条从 $(1, 1) -&gt; (i_2, j_2 - 1) -&gt; (i_2, j_2)$<br>    $f[k, i_1, i_2] = max(f[k, i_1, i_2], f[k - 1, i_1, i_2] + tmp)$</p><p>如果两个格子重合 $tmp = w[i_1,j_1]$<br>    不重合则 $tmp = w[i_1, j_1] + w[i_2, j_2]$</p><p>$i_1==i_2$ 代表两个格子重合<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">15</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> f[N * <span class="number">2</span>][N][N];</span><br><span class="line"><span class="type">int</span> w[N][N];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> a, b, c;</span><br><span class="line">    <span class="keyword">while</span>(cin &gt;&gt; a &gt;&gt; b &gt;&gt; c, a || b || c)</span><br><span class="line">        w[a][b] = c;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> k = <span class="number">2</span>; k &lt;= n + n; k ++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i1 = <span class="number">1</span>; i1 &lt;= n; i1 ++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i2 = <span class="number">1</span>; i2 &lt;= n; i2 ++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">int</span> j1 = k - i1;</span><br><span class="line">                <span class="type">int</span> j2 = k - i2;</span><br><span class="line">                <span class="keyword">if</span>(j1 &gt;= <span class="number">1</span> &amp;&amp; j1 &lt;= n &amp;&amp; j2 &gt;= <span class="number">1</span> &amp;&amp; j2 &lt;= n)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="type">int</span> tmp = w[i1][j1];</span><br><span class="line">                    <span class="keyword">if</span>(i1 != i2)</span><br><span class="line">                        tmp += w[i2][j2];</span><br><span class="line">                    <span class="type">int</span> &amp;ff = f[k][i1][i2];</span><br><span class="line">                    ff = <span class="built_in">max</span>(ff, f[k - <span class="number">1</span>][i1 - <span class="number">1</span>][i2 - <span class="number">1</span>] + tmp);</span><br><span class="line">                    ff = <span class="built_in">max</span>(ff, f[k - <span class="number">1</span>][i1 - <span class="number">1</span>][i2] + tmp);</span><br><span class="line">                    ff = <span class="built_in">max</span>(ff, f[k - <span class="number">1</span>][i1][i2 - <span class="number">1</span>] + tmp);</span><br><span class="line">                    ff = <span class="built_in">max</span>(ff, f[k - <span class="number">1</span>][i1][i2] + tmp);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; f[n + n][n][n];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> 动态规划 </tag>
            
            <tag> c++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cs61B-sp21 | Project0:2048</title>
      <link href="/post/2b409a66.html"/>
      <url>/post/2b409a66.html</url>
      
        <content type="html"><![CDATA[<h1 id="Project0-2048"><a href="#Project0-2048" class="headerlink" title="Project0 2048"></a>Project0 2048</h1><p>cs61B 的第一个项目就是实现 2048 这个小游戏。如果思路清晰，写起来会比较轻松，大致用时1.5 - 2小时。</p><p>$\color{red}{笔者源代码在文末}$</p><h3 id="emptySpaceExists"><a href="#emptySpaceExists" class="headerlink" title="emptySpaceExists"></a>emptySpaceExists</h3><p>从描述可知，需要遍历板子，判断是否存在一个格子为空，如果找到一个，返回 return true，如果搜完未找到，则 return false;<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** Returns true if at least one space on the Board is empty.  </span></span><br><span class="line"><span class="comment"> *  Empty spaces are stored as null. **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">emptySpaceExists</span><span class="params">(Board b)</span> &#123;  </span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> Fill in this function.  </span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>如何获取板子的长度和宽度？</p><p>观察 Board 类，我们发现函数：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** Returns the size of the board. */</span>  </span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">size</span><span class="params">()</span> &#123;  </span><br><span class="line">    <span class="keyword">return</span> values.length;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以，调用 b.size() 即可获得板子的长度。<br>由此，我们可以写出大体框架。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">emptySpaceExists</span><span class="params">(Board b)</span> &#123;  </span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> Fill in this function.  </span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">row</span> <span class="operator">=</span> <span class="number">0</span>; row &lt; b.size(); row ++)  &#123;        </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">col</span> <span class="operator">=</span> <span class="number">0</span>; col &lt; b.size(); col ++)  &#123;            </span><br><span class="line">    <span class="keyword">if</span>(...)  </span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;  </span><br><span class="line">        &#125;    </span><br><span class="line">    &#125;        </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可见，if 判断框里面的条件就是 格子为空。观察 Board 类和 Tile 类</p><p>b.tile(col, row) 返回 Null 如果这个格子为空<br><img src="https://typora-birdy.oss-cn-guangzhou.aliyuncs.com/20240324134631.png" alt="image.png"><br>因此，最终的代码为：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">emptySpaceExists</span><span class="params">(Board b)</span> &#123;  </span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> Fill in this function.  </span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">row</span> <span class="operator">=</span> <span class="number">0</span>; row &lt; b.size(); row ++)  &#123;        </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">col</span> <span class="operator">=</span> <span class="number">0</span>; col &lt; b.size(); col ++)  &#123;            </span><br><span class="line">    <span class="keyword">if</span>(b.tile(col, row) == <span class="literal">null</span>)  </span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;  </span><br><span class="line">        &#125;    </span><br><span class="line">    &#125;        </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="maxTileExists"><a href="#maxTileExists" class="headerlink" title="maxTileExists"></a>maxTileExists</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**  </span></span><br><span class="line"><span class="comment"> * Returns true if any tile is equal to the maximum valid value. * Maximum valid value is given by MAX_PIECE. Note that * given a Tile object t, we get its value with t.value(). */</span></span><br><span class="line"> <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">maxTileExists</span><span class="params">(Board b)</span> &#123;  </span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> Fill in this function.  </span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>与 emptySpaceExists 类似，但是需要获取格子上的值。<br>在 Tile 类中。我们找到方法 value()<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** Return the value supplied to my constructor. */</span>  </span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">value</span><span class="params">()</span> &#123;  </span><br><span class="line">    <span class="keyword">return</span> value;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>所以能写出<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">maxTileExists</span><span class="params">(Board b)</span> &#123;  </span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> Fill in this function.  </span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">col</span> <span class="operator">=</span> <span class="number">0</span>; col &lt; b.size(); col ++)  &#123;        </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">row</span> <span class="operator">=</span> <span class="number">0</span>; row &lt; b.size(); row ++)  &#123;            </span><br><span class="line">    <span class="keyword">if</span>(b.tile(col, row).value() == MAX_PIECE)  </span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;  </span><br><span class="line">    &#125;</span><br><span class="line">&#125;    </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>然而，测试出错。<br><img src="https://typora-birdy.oss-cn-guangzhou.aliyuncs.com/20240324135352.png" alt="image.png"><br>因为没有考虑到空格子的问题。<br>所以我们加上<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(b.tile(col, row) == <span class="literal">null</span>)  </span><br><span class="line">    <span class="keyword">continue</span>;</span><br></pre></td></tr></table></figure><br>最终的代码为：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">maxTileExists</span><span class="params">(Board b)</span> &#123;  </span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> Fill in this function.  </span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">col</span> <span class="operator">=</span> <span class="number">0</span>; col &lt; b.size(); col ++) &#123;  </span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">row</span> <span class="operator">=</span> <span class="number">0</span>; row &lt; b.size(); row ++) &#123;  </span><br><span class="line">            <span class="keyword">if</span>(b.tile(col, row) == <span class="literal">null</span>)  </span><br><span class="line">                <span class="keyword">continue</span>;  </span><br><span class="line">            <span class="keyword">if</span>(b.tile(col, row).value() == MAX_PIECE)  </span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;  </span><br><span class="line">        &#125;    </span><br><span class="line">    &#125;    </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="atLeastOneMoveExists"><a href="#atLeastOneMoveExists" class="headerlink" title="atLeastOneMoveExists"></a>atLeastOneMoveExists</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**  </span></span><br><span class="line"><span class="comment"> * Returns true if there are any valid moves on the board. * There are two ways that there can be valid moves: * 1. There is at least one empty space on the board. * 2. There are two adjacent tiles with the same value. */</span></span><br><span class="line"> <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">atLeastOneMoveExists</span><span class="params">(Board b)</span> &#123;  </span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> Fill in this function.  </span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>返回 true 的情况之一：</p><ol><li>至少存在一个空格子</li><li>至少有两个相邻格子的值相同<br>其中条件一也就是 emptySpaceExists 返回 true<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">atLeastOneMoveExists</span><span class="params">(Board b)</span> &#123;  </span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> Fill in this function. </span></span><br><span class="line">    <span class="keyword">if</span>(emptySpaceExists(b))  </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>; </span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>而是否存在两个相邻格子值相同。我们先遍历行列，取当前位置的格子，值记为 value_cur<br>从这个格子出发，遍历上下左右相邻格子。我们可以创建偏移数组，方便遍历<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>[] dx = &#123;-<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>&#125;;  </span><br><span class="line"><span class="type">int</span>[] dy = &#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, -<span class="number">1</span>&#125;;</span><br></pre></td></tr></table></figure>当然，还要判断新位置有无下标越界<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">atLeastOneMoveExists</span><span class="params">(Board b)</span> &#123;  </span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> Fill in this function.  </span></span><br><span class="line">    <span class="keyword">if</span>(emptySpaceExists(b))  </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;  </span><br><span class="line">    <span class="type">boolean</span> <span class="variable">two</span> <span class="operator">=</span> <span class="literal">false</span>;  </span><br><span class="line">    <span class="type">int</span>[] dx = &#123;-<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>&#125;;  </span><br><span class="line">    <span class="type">int</span>[] dy = &#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, -<span class="number">1</span>&#125;;  </span><br><span class="line">    <span class="type">int</span> <span class="variable">size</span> <span class="operator">=</span> b.size();  </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">col</span> <span class="operator">=</span> <span class="number">0</span>; col &lt; size; col ++) &#123;  </span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">row</span> <span class="operator">=</span> <span class="number">0</span>; row &lt; size; row ++)&#123;  </span><br><span class="line">            <span class="type">int</span> <span class="variable">value_cur</span> <span class="operator">=</span> b.tile(col, row).value();  </span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">0</span>; k &lt; <span class="number">4</span>; k ++)&#123;  </span><br><span class="line">                <span class="type">int</span> <span class="variable">cur_col</span> <span class="operator">=</span> col + dy[k];  </span><br><span class="line">                <span class="type">int</span> <span class="variable">cur_row</span> <span class="operator">=</span> row + dx[k];  </span><br><span class="line">                <span class="keyword">if</span>(cur_col &gt; <span class="number">0</span> &amp;&amp; cur_col &lt; size &amp;&amp; cur_row &gt; <span class="number">0</span> &amp;&amp; cur_row &lt; size &amp;&amp; b.tile(cur_col, cur_row).value() == value_cur)  </span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;  </span><br><span class="line">            &#125;        </span><br><span class="line">        &#125;    </span><br><span class="line">    &#125;    </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="Building-the-Game-Logic"><a href="#Building-the-Game-Logic" class="headerlink" title="Building the Game Logic"></a>Building the Game Logic</h2><h3 id="tilt"><a href="#tilt" class="headerlink" title="tilt"></a>tilt</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">tilt</span><span class="params">(Side side)</span> &#123;  </span><br><span class="line">    <span class="type">boolean</span> changed;  </span><br><span class="line">    changed = <span class="literal">false</span>;  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> Modify this.board (and perhaps this.score) to account  </span></span><br><span class="line">    <span class="comment">// for the tilt to the Side SIDE. If the board changed, set the  </span></span><br><span class="line">    <span class="comment">// changed local variable to true.  </span></span><br><span class="line">    checkGameOver();  </span><br><span class="line">    <span class="keyword">if</span> (changed) &#123;  </span><br><span class="line">        setChanged();  </span><br><span class="line">    &#125;    </span><br><span class="line">    <span class="keyword">return</span> changed;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>先只考虑方向向上：<br>    我们可以考虑先将整个棋盘往上移动，让所有格子向上，填补掉格子上方的空格子，先不做合并处理。<br>    需要注意的一点是，棋盘左下角是(0, 0)。<br>    以列为基础。我们先从倒数第二行，从最上面一行的下面一行开始，向上搜寻有多少个空格子。然后再进行向上移动。同时，进行了移动需要将 changed 设置为 true<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 对于每一列，先找到能向上移动的最大位置（找空格数）  </span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> <span class="variable">col</span> <span class="operator">=</span> <span class="number">0</span>; col &lt; size; col ++) &#123;  </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">row</span> <span class="operator">=</span> size - <span class="number">2</span>; row &gt;= <span class="number">0</span>; row--) &#123;  </span><br><span class="line">        <span class="type">int</span> <span class="variable">nulltile</span> <span class="operator">=</span> <span class="number">0</span>;  </span><br><span class="line">        <span class="type">Tile</span> <span class="variable">t</span> <span class="operator">=</span> board.tile(col, row);  </span><br><span class="line">        <span class="keyword">if</span>(t != <span class="literal">null</span>) &#123;  </span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">row_before</span> <span class="operator">=</span> row + <span class="number">1</span>; row_before &lt; size; row_before ++)&#123;  </span><br><span class="line">                <span class="keyword">if</span>(tile(col, row_before) == <span class="literal">null</span>)  </span><br><span class="line">                    nulltile ++;  </span><br><span class="line">            &#125;            </span><br><span class="line">        board.move(col, row + nulltile, t);  </span><br><span class="line">            changed = <span class="literal">true</span>;  </span><br><span class="line">        &#125;    </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>之后，我们对相同的格子进行合并，只考虑方向向上，那么就是 该位置的格子如果和它上一个格子的值相同，那么该格子向上移动，同时分数增加该格子值的两倍。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="type">int</span> <span class="variable">col</span> <span class="operator">=</span> <span class="number">0</span>; col &lt; size; col ++)&#123;  </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">row</span> <span class="operator">=</span> size - <span class="number">2</span>; row &gt;= <span class="number">0</span>; row --)&#123;  </span><br><span class="line">        <span class="type">Tile</span> <span class="variable">t1</span> <span class="operator">=</span> board.tile(col, row);  </span><br><span class="line">        <span class="keyword">if</span>(t1 != <span class="literal">null</span>)&#123;  </span><br><span class="line">            <span class="type">Tile</span> <span class="variable">t2</span> <span class="operator">=</span> board.tile(col, row + <span class="number">1</span>);  </span><br><span class="line">            <span class="keyword">if</span>(t2 != <span class="literal">null</span> &amp;&amp; t1.value() == t2.value())&#123;  </span><br><span class="line">                board.move(col, row + <span class="number">1</span>, t1);  </span><br><span class="line">                changed = <span class="literal">true</span>;  </span><br><span class="line">                score += <span class="number">2</span> * t2.value();  </span><br><span class="line">            &#125;        </span><br><span class="line">        &#125;    </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>到这里还没有结束，因为如果向上移动了，那么该格子又变成了空格子，所以我们又要重复之前的处理空格子的操作，整体向上移动。<br>结果如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">tilt</span><span class="params">(Side side)</span> &#123;  </span><br><span class="line">    <span class="type">boolean</span> changed;  </span><br><span class="line">    changed = <span class="literal">false</span>;  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> Modify this.board (and perhaps this.score) to account  </span></span><br><span class="line">  </span><br><span class="line">    <span class="type">int</span> <span class="variable">size</span> <span class="operator">=</span> board.size();  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 对于每一列，先找到能向上移动的最大位置（找空格数）  </span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">col</span> <span class="operator">=</span> <span class="number">0</span>; col &lt; size; col ++) &#123;  </span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">row</span> <span class="operator">=</span> size - <span class="number">2</span>; row &gt;= <span class="number">0</span>; row--) &#123;  </span><br><span class="line">            <span class="type">int</span> <span class="variable">nulltile</span> <span class="operator">=</span> <span class="number">0</span>;  </span><br><span class="line">            <span class="type">Tile</span> <span class="variable">t</span> <span class="operator">=</span> board.tile(col, row);  </span><br><span class="line">            <span class="keyword">if</span>(t != <span class="literal">null</span>) &#123;  </span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">row_before</span> <span class="operator">=</span> row + <span class="number">1</span>; row_before &lt; size; row_before ++)&#123;  </span><br><span class="line">                    <span class="keyword">if</span>(tile(col, row_before) == <span class="literal">null</span>)  </span><br><span class="line">                        nulltile ++;  </span><br><span class="line">                &#125;                </span><br><span class="line">        board.move(col, row + nulltile, t);  </span><br><span class="line">                changed = <span class="literal">true</span>;  </span><br><span class="line">            &#125;        </span><br><span class="line">        &#125;    </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">col</span> <span class="operator">=</span> <span class="number">0</span>; col &lt; size; col ++)&#123;  </span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">row</span> <span class="operator">=</span> size - <span class="number">2</span>; row &gt;= <span class="number">0</span>; row --)&#123;  </span><br><span class="line">            <span class="type">Tile</span> <span class="variable">t1</span> <span class="operator">=</span> board.tile(col, row);  </span><br><span class="line">            <span class="keyword">if</span>(t1 != <span class="literal">null</span>)&#123;  </span><br><span class="line">                <span class="type">Tile</span> <span class="variable">t2</span> <span class="operator">=</span> board.tile(col, row + <span class="number">1</span>);  </span><br><span class="line">                <span class="keyword">if</span>(t2 != <span class="literal">null</span> &amp;&amp; t1.value() == t2.value())&#123;  </span><br><span class="line">                    board.move(col, row + <span class="number">1</span>, t1);  </span><br><span class="line">                    changed = <span class="literal">true</span>;  </span><br><span class="line">                    score += <span class="number">2</span> * t2.value();  </span><br><span class="line">                &#125;            </span><br><span class="line">            &#125;        </span><br><span class="line">        &#125;    </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">col</span> <span class="operator">=</span> <span class="number">0</span>; col &lt; size; col ++) &#123;  </span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">row</span> <span class="operator">=</span> size - <span class="number">2</span>; row &gt;= <span class="number">0</span>; row--) &#123;  </span><br><span class="line">            <span class="type">int</span> <span class="variable">nulltile</span> <span class="operator">=</span> <span class="number">0</span>;  </span><br><span class="line">            <span class="type">Tile</span> <span class="variable">t</span> <span class="operator">=</span> board.tile(col, row);  </span><br><span class="line">            <span class="keyword">if</span>(t != <span class="literal">null</span>) &#123;  </span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">row_before</span> <span class="operator">=</span> row + <span class="number">1</span>; row_before &lt; size; row_before ++)&#123;  </span><br><span class="line">                    <span class="keyword">if</span>(tile(col, row_before) == <span class="literal">null</span>)  </span><br><span class="line">                        nulltile ++;  </span><br><span class="line">                &#125;                </span><br><span class="line">            board.move(col, row + nulltile, t);  </span><br><span class="line">                changed = <span class="literal">true</span>;  </span><br><span class="line">            &#125;        </span><br><span class="line">        &#125;    </span><br><span class="line">    &#125;  </span><br><span class="line"></span><br><span class="line">    <span class="comment">// for the tilt to the Side SIDE. If the board changed, set the  </span></span><br><span class="line">    <span class="comment">// changed local variable to true.  </span></span><br><span class="line">    checkGameOver();  </span><br><span class="line">    <span class="keyword">if</span> (changed) &#123;  </span><br><span class="line">        setChanged();  </span><br><span class="line">    &#125;    </span><br><span class="line">    <span class="keyword">return</span> changed;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>但是上述代码只针对了方向向上。<br>官方提供了函数 $setViewingPerspective$，</p><blockquote><p>For this problem, we’ve given away a clean solution. This will allow you to handle the other three directions with only two additional lines of code! Specifically, the <code>Board</code> class has a <code>setViewingPerspective(Side s)</code> function that will change the behavior of the <code>tile</code> and <code>move</code> classes so that they _behave as if the given side was NORTH_.</p></blockquote><p>也就是我们现在操作前加上<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(side != Side.NORTH)  </span><br><span class="line">    board.setViewingPerspective(side);</span><br></pre></td></tr></table></figure></p><p>当然，在最后还需要将视角恢复</p><blockquote><p>Important: Make sure to use <code>board.setViewingPerpsective</code> to set the perspective back to <code>Side.NORTH</code> before you finish your call to <code>tilt</code>, otherwise weird stuff will happen.</p></blockquote><p>最后添加上<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(side != Side.NORTH)  </span><br><span class="line">    board.setViewingPerspective(Side.NORTH);</span><br></pre></td></tr></table></figure></p><p>最终代码为：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">tilt</span><span class="params">(Side side)</span> &#123;  </span><br><span class="line">    <span class="type">boolean</span> changed;  </span><br><span class="line">    changed = <span class="literal">false</span>;  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> Modify this.board (and perhaps this.score) to account  </span></span><br><span class="line">  </span><br><span class="line">    <span class="type">int</span> <span class="variable">size</span> <span class="operator">=</span> board.size();  </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(side != Side.NORTH)  </span><br><span class="line">    board.setViewingPerspective(side);</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 对于每一列，先找到能向上移动的最大位置（找空格数）  </span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">col</span> <span class="operator">=</span> <span class="number">0</span>; col &lt; size; col ++) &#123;  </span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">row</span> <span class="operator">=</span> size - <span class="number">2</span>; row &gt;= <span class="number">0</span>; row--) &#123;  </span><br><span class="line">            <span class="type">int</span> <span class="variable">nulltile</span> <span class="operator">=</span> <span class="number">0</span>;  </span><br><span class="line">            <span class="type">Tile</span> <span class="variable">t</span> <span class="operator">=</span> board.tile(col, row);  </span><br><span class="line">            <span class="keyword">if</span>(t != <span class="literal">null</span>) &#123;  </span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">row_before</span> <span class="operator">=</span> row + <span class="number">1</span>; row_before &lt; size; row_before ++)&#123;  </span><br><span class="line">                    <span class="keyword">if</span>(tile(col, row_before) == <span class="literal">null</span>)  </span><br><span class="line">                        nulltile ++;  </span><br><span class="line">                &#125;                </span><br><span class="line">        board.move(col, row + nulltile, t);  </span><br><span class="line">                changed = <span class="literal">true</span>;  </span><br><span class="line">            &#125;        </span><br><span class="line">        &#125;    </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">col</span> <span class="operator">=</span> <span class="number">0</span>; col &lt; size; col ++)&#123;  </span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">row</span> <span class="operator">=</span> size - <span class="number">2</span>; row &gt;= <span class="number">0</span>; row --)&#123;  </span><br><span class="line">            <span class="type">Tile</span> <span class="variable">t1</span> <span class="operator">=</span> board.tile(col, row);  </span><br><span class="line">            <span class="keyword">if</span>(t1 != <span class="literal">null</span>)&#123;  </span><br><span class="line">                <span class="type">Tile</span> <span class="variable">t2</span> <span class="operator">=</span> board.tile(col, row + <span class="number">1</span>);  </span><br><span class="line">                <span class="keyword">if</span>(t2 != <span class="literal">null</span> &amp;&amp; t1.value() == t2.value())&#123;  </span><br><span class="line">                    board.move(col, row + <span class="number">1</span>, t1);  </span><br><span class="line">                    changed = <span class="literal">true</span>;  </span><br><span class="line">                    score += <span class="number">2</span> * t2.value();  </span><br><span class="line">                &#125;            </span><br><span class="line">            &#125;        </span><br><span class="line">        &#125;    </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">col</span> <span class="operator">=</span> <span class="number">0</span>; col &lt; size; col ++) &#123;  </span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">row</span> <span class="operator">=</span> size - <span class="number">2</span>; row &gt;= <span class="number">0</span>; row--) &#123;  </span><br><span class="line">            <span class="type">int</span> <span class="variable">nulltile</span> <span class="operator">=</span> <span class="number">0</span>;  </span><br><span class="line">            <span class="type">Tile</span> <span class="variable">t</span> <span class="operator">=</span> board.tile(col, row);  </span><br><span class="line">            <span class="keyword">if</span>(t != <span class="literal">null</span>) &#123;  </span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">row_before</span> <span class="operator">=</span> row + <span class="number">1</span>; row_before &lt; size; row_before ++)&#123;  </span><br><span class="line">                    <span class="keyword">if</span>(tile(col, row_before) == <span class="literal">null</span>)  </span><br><span class="line">                        nulltile ++;  </span><br><span class="line">                &#125;                </span><br><span class="line">            board.move(col, row + nulltile, t);  </span><br><span class="line">                changed = <span class="literal">true</span>;  </span><br><span class="line">            &#125;        </span><br><span class="line">        &#125;    </span><br><span class="line">    &#125;  </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(side != Side.NORTH)  </span><br><span class="line">    board.setViewingPerspective(Side.NORTH);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// for the tilt to the Side SIDE. If the board changed, set the  </span></span><br><span class="line">    <span class="comment">// changed local variable to true.  </span></span><br><span class="line">    checkGameOver();  </span><br><span class="line">    <span class="keyword">if</span> (changed) &#123;  </span><br><span class="line">        setChanged();  </span><br><span class="line">    &#125;    </span><br><span class="line">    <span class="keyword">return</span> changed;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>当然，两次填补空格子的操作是相同的。所以可以简化为一个函数。然后调用两次。<br>但是笔者不太会 java。</p><h2 id="Windows-可能运行时无法用方向键控制"><a href="#Windows-可能运行时无法用方向键控制" class="headerlink" title="Windows 可能运行时无法用方向键控制"></a>Windows 可能运行时无法用方向键控制</h2><p>进入 GUISource.java<br>将方向键替换为 W、D、S、A<br>如下<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span> (command) &#123;  </span><br><span class="line">    <span class="keyword">case</span> <span class="string">&quot;W&quot;</span> :  </span><br><span class="line">        command = <span class="string">&quot;Up&quot;</span>;  </span><br><span class="line">        <span class="keyword">break</span>;  </span><br><span class="line">    <span class="keyword">case</span> <span class="string">&quot;D&quot;</span> :  </span><br><span class="line">        command = <span class="string">&quot;Right&quot;</span>;  </span><br><span class="line">        <span class="keyword">break</span>;  </span><br><span class="line">    <span class="keyword">case</span> <span class="string">&quot;S&quot;</span> :  </span><br><span class="line">        command = <span class="string">&quot;Down&quot;</span>;  </span><br><span class="line">        <span class="keyword">break</span>;  </span><br><span class="line">    <span class="keyword">case</span> <span class="string">&quot;A&quot;</span> :  </span><br><span class="line">        command = <span class="string">&quot;Left&quot;</span>;  </span><br><span class="line">        <span class="keyword">break</span>;  </span><br><span class="line">    <span class="keyword">default</span> :  </span><br><span class="line">        <span class="keyword">break</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>到此，就完成了第一个 project（耗时近 2 小时）</p><h3 id="笔者源代码"><a href="#笔者源代码" class="headerlink" title="笔者源代码"></a>笔者源代码</h3><p><a href="https://github.com/DaphneOdera17/cs61b-sp21/tree/main/proj0/game2048">点击此处</a></p>]]></content>
      
      
      <categories>
          
          <category> cs61B </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cs61B </tag>
            
            <tag> 2048 </tag>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github | 解决ssh Connection refused</title>
      <link href="/post/aa87ba6f.html"/>
      <url>/post/aa87ba6f.html</url>
      
        <content type="html"><![CDATA[<h1 id="ssh-connect-to-host-github-com-port-22-Connection-refused"><a href="#ssh-connect-to-host-github-com-port-22-Connection-refused" class="headerlink" title="ssh: connect to host github.com port 22: Connection refused"></a>ssh: connect to host github.com port 22: Connection refused</h1><p>默认配置文件在 ~/.ssh/config<br>如果没有则 touch ~/.ssh/config</p><p>vim ~/.ssh/config<br>在其中添加这几行：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Host github.com</span><br><span class="line">  Hostname ssh.github.com</span><br><span class="line">  Port 443</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Github </tag>
            
            <tag> SSH </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github | 配置SSH</title>
      <link href="/post/790c8b8.html"/>
      <url>/post/790c8b8.html</url>
      
        <content type="html"><![CDATA[<h1 id="Github-SSH"><a href="#Github-SSH" class="headerlink" title="$Github-SSH$"></a>$Github-SSH$</h1><p>在终端输入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -b 4096 -C &quot;your_email@example.com&quot;</span><br></pre></td></tr></table></figure><p>生成密钥</p><p>默认在 $\sim/.ssh$ 文件夹下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd ~/.ssh</span><br></pre></td></tr></table></figure><p>会生成 $id_rsa$ 和 $id_rsa.pub$ 这两个文件 </p><p><img src="https://typora-birdy.oss-cn-guangzhou.aliyuncs.com/image-20240309183457913.png" alt=""></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat id_rsa.pub</span><br></pre></td></tr></table></figure><p><img src="https://typora-birdy.oss-cn-guangzhou.aliyuncs.com/image-20240309183611993.png" alt=""></p><p>再将这一串密钥复制下来</p><p>登陆到 <a href="https://github.com/settings/keys">SSH and GPG keys</a> 该链接</p><p>点击 $New~SSH~key$</p><p><img src="https://typora-birdy.oss-cn-guangzhou.aliyuncs.com/image-20240309183930916.png" alt=""></p><p>在该界面下输入密钥的名字，在 $Key$ 栏中粘贴刚才复制的密钥</p><p><img src="https://typora-birdy.oss-cn-guangzhou.aliyuncs.com/image-20240309184004773.png" alt=""></p><p>点击 $Add~SSH~key$ 即可添加成功</p><p>在终端，可以用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>来测试能否连接</p><p>克隆仓库的 $SSH$ 地址</p><p><img src="https://typora-birdy.oss-cn-guangzhou.aliyuncs.com/image-20240309184330682.png" alt=""></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone git@github.com:...</span><br></pre></td></tr></table></figure><p>即可</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Github </tag>
            
            <tag> SSH </tag>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法 | 时空复杂度</title>
      <link href="/post/c689e876.html"/>
      <url>/post/c689e876.html</url>
      
        <content type="html"><![CDATA[<h1 id="时空复杂度"><a href="#时空复杂度" class="headerlink" title="时空复杂度"></a>时空复杂度</h1><h2 id="时间复杂度"><a href="#时间复杂度" class="headerlink" title="时间复杂度"></a>时间复杂度</h2><p>评测机大概 $1s$ 最多运行 $1$ 亿次，即 $1e8$​</p><p>时间复杂度一般小于 $1e7 \sim 1e8$ 就可以</p><p>$2^{20} ≈ 10^6$</p><p>$2^{16} = 65536$</p><p>$2^{15} = 32768$</p><p>$2^{63} = 10^{18}$</p><h2 id="根据数据范围反推算法复杂度及算法"><a href="#根据数据范围反推算法复杂度及算法" class="headerlink" title="根据数据范围反推算法复杂度及算法"></a>根据数据范围反推算法复杂度及算法</h2><p>源自 $y$ 总，指路：<a href="https://www.acwing.com/blog/content/32/">原文链接</a></p><ol><li>$n \le 30$, 指数级别, $dfs$+剪枝，状态压缩$dp$</li><li>$n \le 100$ =&gt; $O(n^3)$，$floyd，dp，$高斯消元</li><li>$n \le 1000$ =&gt; $O(n^2)$，$O(n^2logn)$，$dp$，二分，朴素版$Dijkstra$、朴素版$Prim$、$Bellman-Ford$</li><li>$n \le 10000$ =&gt; $O(n * \sqrt n)$，块状链表、分块、莫队</li><li>$n \le 100000$ =&gt; $O(nlogn)$ =&gt; 各种$sort$，线段树、树状数组、$set/map$、$heap$、拓扑排序、$dijkstra+heap$、$prim+heap$、$Kruskal$、$spfa$、求凸包、求半平面交、二分、$CDQ$分治、整体二分、后缀数组、树链剖分、动态树</li><li>$n \le 1000000$ =&gt; $O(n)$, 以及常数较小的 $O(nlogn)$ 算法 =&gt; 单调队列、 $hash$、双指针扫描、$BFS$、并查集，$kmp$、$AC$自动机，常数比较大的 $O(nlogn)$ 的做法：$sort$、树状数组、$heap$、$dijkstra$、$spfa$</li><li>$n \le 10000000$ =&gt; $O(n)$，双指针扫描、$kmp$、$AC$自动机、线性筛素数</li><li>$n \le 10^9$ =&gt; $O(\sqrt n)$，判断质数</li><li>$n \le 10^{18}$ =&gt; $O(logn)$，最大公约数，快速幂，数位$DP$</li><li>$n \le 10^{1000}$ =&gt; $O((logn)^2)$，高精度加减乘除</li><li>$n \le 10^{100000}$ =&gt; $O(logk \times loglogk)，k$表示位数，高精度加减、$FFT/NTT$</li></ol><h2 id="空间复杂度"><a href="#空间复杂度" class="headerlink" title="空间复杂度"></a>空间复杂度</h2><p>对于空间复杂度</p><p>$int ~ =~4 ~ Byte$</p><p>$char ~ =~1 ~ Byte$</p><p>$long~ long ~ =~8 ~ Byte$</p><p>$float ~ =~4 ~ Byte$</p><p>$double ~ =~8 ~ Byte$</p><p>$64MB = 6\times 2^{20}Byte = 6.4 \times 10^{7} Byte$</p><p>可以开 $1.6 \times 10^{7}$ 个 $int$</p><h2 id="数据量对于输入输出的影响"><a href="#数据量对于输入输出的影响" class="headerlink" title="数据量对于输入输出的影响"></a>数据量对于输入输出的影响</h2><p>$n &lt; 10^5$ 时，用  $scanf,printf,cin,cout$ 差不多</p><p>$n \ge 10^5$ 时，用 $scanf,printf$</p><p>如果想用 $cin, cout$，需要关闭同步</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>), cin.<span class="built_in">tie</span>(<span class="number">0</span>), cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> 时间复杂度 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>科普 | base64编码</title>
      <link href="/post/e4aae5e6.html"/>
      <url>/post/e4aae5e6.html</url>
      
        <content type="html"><![CDATA[<h1 id="Base64-编码"><a href="#Base64-编码" class="headerlink" title="$Base64$ 编码"></a>$Base64$ 编码</h1><p><a href="https://en.wikipedia.org/wiki/Base64">Wiki</a></p><p><img src="https://typora-birdy.oss-cn-guangzhou.aliyuncs.com/image-20240121092628109.png" alt="base64编码表"></p><p>$Base64$ 用 $6$ 位表示</p><p><img src="https://typora-birdy.oss-cn-guangzhou.aliyuncs.com/image-20240121091417546.png" alt=""></p><p>将  $echo$ “$HelloWorld$” 的结果作为 $Base64$ 命令的输入来执行一个 $Base64$ 编码操作</p><h2 id="编码的原理和过程"><a href="#编码的原理和过程" class="headerlink" title="编码的原理和过程"></a>编码的原理和过程</h2><h4 id="1-转换编码对象为二进制"><a href="#1-转换编码对象为二进制" class="headerlink" title="1.转换编码对象为二进制"></a>1.转换编码对象为二进制</h4><p>$H：01001000$</p><p>$e：01100101$</p><p>$l：01101100$</p><p>$l：01101100$</p><p>$o：01101111$</p><p>$W：01010111$</p><p>$o：01101111$</p><p>$r：01110010$</p><p>$l：01101100$</p><p>$d：01100100$</p><p>$\n：00001010$$</p><p>再将二进制位从左往右排列，得到字符串的二进制表示</p><h4 id="2-把二进制的字符串按照每六位一组来分组"><a href="#2-把二进制的字符串按照每六位一组来分组" class="headerlink" title="2.把二进制的字符串按照每六位一组来分组"></a>2.把二进制的字符串按照每六位一组来分组</h4><p><img src="https://typora-birdy.oss-cn-guangzhou.aliyuncs.com/image-20240121091749052.png" alt=""></p><p>如果最后一组二进制位不足 $6$ 位，用 $0$ 来补齐</p><p><img src="https://typora-birdy.oss-cn-guangzhou.aliyuncs.com/image-20240121091857123.png" alt=""></p><h4 id="3-把每一组的二进制位转换成十进制的数字并映射"><a href="#3-把每一组的二进制位转换成十进制的数字并映射" class="headerlink" title="3.把每一组的二进制位转换成十进制的数字并映射"></a>3.把每一组的二进制位转换成十进制的数字并映射</h4><p><img src="https://typora-birdy.oss-cn-guangzhou.aliyuncs.com/image-20240121092008188.png" alt=""></p><p>就得到了编码之后的结果</p><p>$SGVsbG9Xb3JsZAo$</p><p>但是需要注意的是，$\textcolor{red}{编码之后的长度必须为 4 的倍数}$</p><p>如果不是的话，需要在结尾的位置用 $=$ 来补齐。</p><p>因此，结果为</p><p>$SGVsbG9Xb3JsZAo=$</p><h2 id="解码"><a href="#解码" class="headerlink" title="解码"></a>解码</h2><p><img src="https://typora-birdy.oss-cn-guangzhou.aliyuncs.com/image-20240121092530681.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 科普 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编码 </tag>
            
            <tag> base64 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>books</title>
      <link href="/books/index.html"/>
      <url>/books/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/modify.js"/>
      <url>/js/modify.js</url>
      
        <content type="html"><![CDATA['use strict';const cheerio = require('cheerio');/** * 在页面插入新顶部图 * @param {cheerio.Root} $ Root */function insertTopImg($) {    let header = $('#page-header');    if (header.length === 0) return;    let background = header.css('background-image');    if (!background) return;    $('#post, #page, #archive, #tag, #category').prepend(`<div class="top-img" style="background-image: ${background};"></div>`);}hexo.extend.filter.register('after_render:html', function(str, data) {    let $ = cheerio.load(str, {        decodeEntities: false    });    insertTopImg($);    return $.html();});]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>关于我</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>categories</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/modify.css"/>
      <url>/css/modify.css</url>
      
        <content type="html"><![CDATA[#page-header,#page-header:before {  background: transparent !important;}#page-header.post-bg,#page-header.not-home-page {  height: 280px !important;}#page-header #post-info {  bottom: 40px !important;}#page-header #page-site-info {  top: 140px !important;}@media screen and (max-width: 768px) {  #page-header.not-home-page {    height: 200px !important;  }  #page-header #post-info {    bottom: 10px !important;  }  #page-header #page-site-info {    top: 100px !important;  }}.top-img {  height: 250px;  margin: -50px -40px 50px;  border-top-left-radius: inherit;  border-top-right-radius: inherit;  background-position: center center;  background-size: cover;  -webkit-transition: all 0.3s;  -moz-transition: all 0.3s;  -o-transition: all 0.3s;  -ms-transition: all 0.3s;  transition: all 0.3s;}@media screen and (max-width: 768px) {  .top-img {    height: 230px;    margin: -36px -14px 36px;  }}[data-theme='dark'] .top-img {  filter: brightness(0.8);}#footer:before {  background-color: rgba(255,255,255,0.5);}[data-theme='dark'] #footer:before {  background-color: rgba(0,0,0,0.5);}#footer-wrap,#footer-wrap a {  color: #111;  -webkit-transition: unset;  -moz-transition: unset;  -o-transition: unset;  -ms-transition: unset;  transition: unset;}[data-theme='dark'] #footer-wrap,[data-theme='dark'] #footer-wrap a {  color: var(--light-grey);}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>gallery</title>
      <link href="/gallery/index.html"/>
      <url>/gallery/index.html</url>
      
        <content type="html"><![CDATA[<div class="gallery-group-main"><figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='/img-url' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">name</div>  <p>description</p>  <a href='/link'></a>  </figcaption>  </figure>  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='/img-url' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">name</div>  <p>description</p>  <a href='/link'></a>  </figcaption>  </figure>  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='/img-url' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">name</div>  <p>description</p>  <a href='/link'></a>  </figcaption>  </figure>  </div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>个人随想录</title>
      <link href="/essay/index.html"/>
      <url>/essay/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>个人随想录</title>
      <link href="/artitalk/index.html"/>
      <url>/artitalk/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/music/index.html"/>
      <url>/music/index.html</url>
      
        <content type="html"><![CDATA[<!-- 播放器 --><div class="music-player"><!-- audio标签 --><audio class="music-player__audio" ></audio><!-- 播放器主体 --><div class="music-player__main"><!-- 模糊背景 --><div class="music-player__blur"></div><!-- 唱片 --><div class="music-player__disc"><!-- 唱片图片 --><div class="music-player__image"><img width="100%" src="" alt=""></div><!-- 指针 --><div class="music-player__pointer"><img width="100%" src="/img/cd_tou.png" alt=""></div></div><!-- 控件主体 --><div class="music-player__controls"><!-- 歌曲信息 --><div class="music__info"><h3 class="music__info--title">...</h3></div><!-- 控件... --><div class="player-control"><div class="player-control__content"><div class="player-control__btns"><div class="player-control__btn player-control__btn--prev"><i class="iconfont icon-prev"></i></div><div class="player-control__btn player-control__btn--play"><i class="iconfont icon-play"></i></div><div class="player-control__btn player-control__btn--next"><i class="iconfont icon-next"></i></div><div class="player-control__btn player-control__btn--mode"><i class="iconfont icon-random"></i></div></div><div class="player-control__volume"><div class="control__volume--icon player-control__btn"><i class="iconfont icon-volume"></i></div><div class="control__volume--progress progress"></div></div></div><div class="player-control__content"><div class="player__song--progress progress"></div><div class="player__song--timeProgess nowTime">00:00</div><div class="player__song--timeProgess totalTime">00:00</div></div></div></div></div><!-- 歌曲列表 --><div class="music-player__list"><ul class="music__list_content"></ul></div></div><script src="/js/utill.js"></script><script src="https://cdn.bootcdn.net/ajax/libs/jquery/3.6.0/jquery.slim.min.js"></script><script src="/js/player.js?10"></script><div style="text-align:center;margin:-100px 0; font:normal 14px/24px 'MicroSoft YaHei';color:#ffffff"></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/background.css"/>
      <url>/css/background.css</url>
      
        <content type="html"><![CDATA[/* 文章页背景 */.layout_post > #post {/* 以下代表透明度为0.7 可以自行修改*/background: rgba(255, 255, 255, 0.9);}/* 所有页面背景 */#aside_content .card-widget,#recent-posts > .recent-post-item,.layout_page > div:first-child:not(.recent-posts),.layout_post > #page,.layout_post > #post,.read-mode .layout_post > #post {/* 以下代表透明度为0.7 */background: rgba(255, 255, 255, 0.9);}/*侧边卡片的透明度 */:root {--card-bg: rgba(255, 255, 255, 0.9);}/* 页脚透明 */#footer {/* 以下代表透明度为0.7 */background: rgba(255, 255, 255, 0.9);}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>link</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>个人随想录</title>
      <link href="/talk/index.html"/>
      <url>/talk/index.html</url>
      
        <content type="html"><![CDATA[<head>  <script src="https://libs.baidu.com/jquery/2.0.0/jquery.min.js"></script></head><body>      <img src="https://typora-birdy.oss-cn-guangzhou.aliyuncs.com/20240406235836.png">      <!-- 引用 artitalk -->      <script type="text/javascript" src="https://unpkg.com/artitalk"></script>      <!-- 存放说说的容器 -->      <div id="artitalk_main"></div>      <script>      new Artitalk({          appId: 'io9zpiEMivhCI0bTijyctNGY-MdYXbMMI', // Your LeanCloud appId          appKey: 'Fxtw4McQ0lRMQ4jKyk4AInWj' // Your LeanCloud appKey      })      </script></body>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
